function NewsCategory(){}NewsCategory.prototype.run=function(){var t=this;t.listenAddCategoryEvent(),t.listenEditCategoryEvent(),t.listenDeleteCategoryEvent()},NewsCategory.prototype.listenDeleteCategoryEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");xfzalert.alertConfirm({title:"确定要删除分类名称？",confirmCallback:function(){xfzajax.post({url:"/cms/delete_news_category/",data:{pk:t},success:function(t){200===t.code&&window.location.reload()}})}})})},NewsCategory.prototype.listenEditCategoryEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),n=t.attr("data-name");xfzalert.alertOneInput({title:"修改分类名称",placeholder:"请输入新的分类名称",value:n,confirmCallback:function(t){xfzajax.post({url:"/cms/edit_news_category/",data:{pk:e,name:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},NewsCategory.prototype.listenAddCategoryEvent=function(){$("#add-btn").click(function(){xfzalert.alertOneInput({title:"添加新闻分类",placeholder:"请输入新闻分类",confirmCallback:function(t){xfzajax.post({url:"/cms/add_news_category/",data:{name:t},success:function(t){200===t.code&&(console.log(t),window.location.reload())}})}})})},$(function(){(new NewsCategory).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3NfY2F0ZWdvcnkuanMiXSwibmFtZXMiOlsiTmV3c0NhdGVnb3J5IiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsInRoaXMiLCJsaXN0ZW5BZGRDYXRlZ29yeUV2ZW50IiwibGlzdGVuRWRpdENhdGVnb3J5RXZlbnQiLCJsaXN0ZW5EZWxldGVDYXRlZ29yeUV2ZW50IiwiJCIsImNsaWNrIiwicGsiLCJwYXJlbnQiLCJhdHRyIiwieGZ6YWxlcnQiLCJhbGVydENvbmZpcm0iLCJ0aXRsZSIsImNvbmZpcm1DYWxsYmFjayIsInhmemFqYXgiLCJwb3N0IiwidXJsIiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsInRyIiwibmFtZSIsImFsZXJ0T25lSW5wdXQiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwiaW5wdXRWYWx1ZSIsImNsb3NlIiwiaW5wdVZhbHVlIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBU0EsZ0JBR1JBLGFBQWFDLFVBQVVDLElBQU0sV0FDekIsSUFBSUMsRUFBS0MsS0FDVEQsRUFBS0UseUJBQ0xGLEVBQUtHLDBCQUNMSCxFQUFLSSw2QkFLVFAsYUFBYUMsVUFBVU0sMEJBQTRCLFdBRS9CQyxFQUFFLGVBQ1JDLE1BQU0sV0FDWixJQUVJQyxFQUZhRixFQUFFSixNQUNDTyxTQUFTQSxTQUNqQkMsS0FBSyxXQUNqQkMsU0FBU0MsYUFBYSxDQUNsQkMsTUFBUSxhQUNSQyxnQkFBa0IsV0FDZEMsUUFBUUMsS0FBSyxDQUNUQyxJQUFNLDZCQUNOQyxLQUFPLENBQ0hWLEdBQUtBLEdBRVRXLFFBQVUsU0FBVUMsR0FDSSxNQUFqQkEsRUFBYSxNQUNaQyxPQUFPQyxTQUFTQyxrQkFXNUN6QixhQUFhQyxVQUFVSyx3QkFBMEIsV0FFL0JFLEVBQUUsYUFDUkMsTUFBTSxXQUNYLElBQ0lpQixFQURhbEIsRUFBRUosTUFDQ08sU0FBU0EsU0FDekJELEVBQUtnQixFQUFHZCxLQUFLLFdBQ2JlLEVBQU9ELEVBQUdkLEtBQUssYUFDbkJDLFNBQVNlLGNBQWMsQ0FDbkJiLE1BQVEsU0FDUmMsWUFBYyxZQUNkQyxNQUFRSCxFQUNSWCxnQkFBa0IsU0FBVWUsR0FDeEJkLFFBQVFDLEtBQUssQ0FDVEMsSUFBTSwyQkFDTkMsS0FBTyxDQUNIVixHQUFLQSxFQUNMaUIsS0FBT0ksR0FFWFYsUUFBVSxTQUFVQyxHQUNJLE1BQWpCQSxFQUFhLEtBQ1pDLE9BQU9DLFNBQVNDLFNBR2hCWixTQUFTbUIsaUJBV3BDaEMsYUFBYUMsVUFBVUksdUJBQXlCLFdBQy9CRyxFQUFFLFlBQ1JDLE1BQU0sV0FDVEksU0FBU2UsY0FBYyxDQUNuQmIsTUFBUSxTQUNSYyxZQUFjLFVBQ2RiLGdCQUFrQixTQUFVaUIsR0FDeEJoQixRQUFRQyxLQUFLLENBQ1RDLElBQU0sMEJBQ05DLEtBQU8sQ0FDSE8sS0FBT00sR0FFWFosUUFBVSxTQUFVQyxHQUNLLE1BQWxCQSxFQUFhLE9BQ1pZLFFBQVFDLElBQUliLEdBQ1pDLE9BQU9DLFNBQVNDLG1CQVk1Q2pCLEVBQUUsWUFDaUIsSUFBSVIsY0FDVkUiLCJmaWxlIjoibmV3c19jYXRlZ29yeS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL+aehOmAoOWHveaVsFxuZnVuY3Rpb24gTmV3c0NhdGVnb3J5KCkge1xuXG59O1xuIE5ld3NDYXRlZ29yeS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgICB2YXIgc2VsZj10aGlzO1xuICAgICBzZWxmLmxpc3RlbkFkZENhdGVnb3J5RXZlbnQoKTtcbiAgICAgc2VsZi5saXN0ZW5FZGl0Q2F0ZWdvcnlFdmVudCgpO1xuICAgICBzZWxmLmxpc3RlbkRlbGV0ZUNhdGVnb3J5RXZlbnQoKTtcbiB9O1xuXG5cblxuIE5ld3NDYXRlZ29yeS5wcm90b3R5cGUubGlzdGVuRGVsZXRlQ2F0ZWdvcnlFdmVudCA9IGZ1bmN0aW9uKCl7XG4gICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgdmFyIGRlbGV0ZUJ0biA9ICQoXCIuZGVsZXRlLWJ0blwiKTtcbiAgICAgZGVsZXRlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgIHZhciBjdXJyZW50QnRuID0gJCh0aGlzKTtcbiAgICAgICAgIHZhciB0ciA9IGN1cnJlbnRCdG4ucGFyZW50KCkucGFyZW50KCk7XG4gICAgICAgICB2YXIgcGsgPSB0ci5hdHRyKCdkYXRhLXBrJyk7XG4gICAgICAgICB4ZnphbGVydC5hbGVydENvbmZpcm0oe1xuICAgICAgICAgICAgICd0aXRsZSc6J+ehruWumuimgeWIoOmZpOWIhuexu+WQjeensO+8nycsXG4gICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6ZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgICAgICAgICAgJ3VybCc6Jy9jbXMvZGVsZXRlX25ld3NfY2F0ZWdvcnkvJyxcbiAgICAgICAgICAgICAgICAgICAgICdkYXRhJzp7XG4gICAgICAgICAgICAgICAgICAgICAgICAgJ3BrJzpwayxcbiAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddPT09MjAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgIH1cbiAgICAgICAgIH0pXG4gICAgIH0pXG4gfVxuXG5cbiBOZXdzQ2F0ZWdvcnkucHJvdG90eXBlLmxpc3RlbkVkaXRDYXRlZ29yeUV2ZW50ID0gZnVuY3Rpb24oKXtcbiAgICAgdmFyIHNlbGYgPSB0aGlzOy8v5Luj6KGoTmV3c0NhdGVnb3J5XG4gICAgIHZhciBlZGl0QnRuID0gJChcIi5lZGl0LWJ0blwiKTtcbiAgICAgZWRpdEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjdXJyZW50QnRuID0gJCh0aGlzKTsvL+S7o+ihqGVkaXRCdG5cbiAgICAgICAgdmFyIHRyID0gY3VycmVudEJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcbiAgICAgICAgdmFyIHBrID0gdHIuYXR0cignZGF0YS1waycpO1xuICAgICAgICB2YXIgbmFtZSA9IHRyLmF0dHIoJ2RhdGEtbmFtZScpO1xuICAgICAgICB4ZnphbGVydC5hbGVydE9uZUlucHV0KHtcbiAgICAgICAgICAgICd0aXRsZSc6J+S/ruaUueWIhuexu+WQjeensCcsXG4gICAgICAgICAgICAncGxhY2Vob2xkZXInOifor7fovpPlhaXmlrDnmoTliIbnsbvlkI3np7AnLFxuICAgICAgICAgICAgJ3ZhbHVlJzpuYW1lLFxuICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6ZnVuY3Rpb24gKGlucHV0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgICAgICAgICAndXJsJzonL2Ntcy9lZGl0X25ld3NfY2F0ZWdvcnkvJyxcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOntcbiAgICAgICAgICAgICAgICAgICAgICAgICdwayc6cGssXG4gICAgICAgICAgICAgICAgICAgICAgICAnbmFtZSc6aW5wdXRWYWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOmZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddPT09MjAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmNsb3NlKCk7Ly/lhbPpl63mqKHmgIHlr7nor53moYZcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSlcbiB9XG5cblxuXG4gTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5saXN0ZW5BZGRDYXRlZ29yeUV2ZW50ID0gZnVuY3Rpb24oKXtcbiAgICAgdmFyIGFkZEJ0biA9ICQoJyNhZGQtYnRuJyk7XG4gICAgIGFkZEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICB4ZnphbGVydC5hbGVydE9uZUlucHV0KHtcbiAgICAgICAgICAgICAndGl0bGUnOifmt7vliqDmlrDpl7vliIbnsbsnLFxuICAgICAgICAgICAgICdwbGFjZWhvbGRlcic6J+ivt+i+k+WFpeaWsOmXu+WIhuexuycsXG4gICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6ZnVuY3Rpb24gKGlucHVWYWx1ZSkge1xuICAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgICAgICAgICAgJ3VybCc6Jy9jbXMvYWRkX25ld3NfY2F0ZWdvcnkvJyxcbiAgICAgICAgICAgICAgICAgICAgICdkYXRhJzp7XG4gICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOmlucHVWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0Wydjb2RlJ10gPT09MjAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgIH1cbiAgICAgICAgIH0pO1xuXG4gICAgIH0pXG4gfTtcblxuXG5cbiAkKGZ1bmN0aW9uICgpIHtcbiAgICAgdmFyIGNhdGVnb3J5ID0gbmV3IE5ld3NDYXRlZ29yeSgpO1xuICAgICBjYXRlZ29yeS5ydW4oKTtcbiB9KSJdfQ==
