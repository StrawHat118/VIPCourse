function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scrool-wrapper")}Auth.prototype.run=function(){var n=this;n.listenShowHideEvent(),n.listenSwitchEvent(),n.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var n=this,t=$(".signin-btn"),e=$(".signup-btn"),i=$(".close-btn");t.click(function(){n.showEvent(),n.scrollWrapper.css({left:0})}),e.click(function(){n.showEvent(),n.scrollWrapper.css({left:-400})}),i.click(function(){n.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var t=this;$(".switch").click(function(){var n=t.scrollWrapper.css("left");(n=parseInt(n))<0?t.scrollWrapper.animate({left:"0"}):t.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var o=this,n=$(".signin-group"),i=n.find("input[name='telephone']"),s=n.find("input[name='password']"),r=n.find("input[name='remember']");n.find(".submit-btn").click(function(){var n=i.val(),t=s.val(),e=r.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:n,password:t,remember:e?1:0},success:function(n){if(200===n.code)o.hideEvent(),window.location.reload();else{var t=n.message;if(console.log(t),"string"==typeof t||t.constructor==String)window.messageBox.show(t);else for(var e in t){var i=t[e].message;window.messageBox.show(i)}}},fail:function(n){console.log(n)}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
