function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scrool-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},$(function(){(new FrontBase).run()}),Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),s=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),s.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var o=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),a=t.find("input[name='password']"),i=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=a.val(),e=i.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){if(200===t.code)o.hideEvent(),window.location.reload();else{var n=t.message;if(console.log(n),"string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var s=n[e].message;window.messageBox.show(s)}}},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var i=this,t=$(".signup-group"),n=t.find(".submit-btn"),c=t.find("input[name='telephone']"),r=t.find("input[name='username']"),p=t.find("input[name='img_captcha']"),l=t.find("input[name='password1']"),u=t.find("input[name='password2']"),h=t.find("input[name='sms_captcha']");n.click(function(){var t=c.val(),n=r.val(),e=p.val(),s=l.val(),o=u.val(),a=h.val();xfzajax.post({url:"/account/register/",data:{telephone:t,username:n,img_captcha:e,password1:s,password2:o,sms_captcha:a},success:function(t){if(200===t.code)i.hideEvent(),window.location.reload();else{var n=t.message;if(console.log(n),"string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var s=n[e].message;window.messageBox.show(s)}}},fail:function(t){console.log(t)}})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=10;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),(n-=1)<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,t=$(".sms-captcha-btn"),e=$(".signup-group input[name='telephone']");t.click(function(){var t=e.val();t?xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&(console.log(t),n.smsSuccessEvent())},fail:function(){console.log(error)}}):messageBox.showInfo("请输入手机号码！")})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
